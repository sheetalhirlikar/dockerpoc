# Generated by Django 4.2.3 on 2023-07-20 09:13

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AlrAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account', models.CharField(max_length=32)),
                ('company', models.CharField(max_length=32)),
                ('area', models.CharField(max_length=32)),
                ('mode', models.CharField(max_length=7)),
                ('tags', models.CharField(max_length=1024)),
            ],
            options={
                'db_table': 'alr_account',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AlrRestrictions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('empno', models.IntegerField()),
                ('mode', models.CharField(max_length=7)),
            ],
            options={
                'db_table': 'alr_restrictions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AlrUser',
            fields=[
                ('email', models.CharField(max_length=128, primary_key=True, serialize=False)),
                ('account', models.CharField(max_length=32)),
                ('mode', models.CharField(max_length=7)),
            ],
            options={
                'db_table': 'alr_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Countries',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iso', models.CharField(max_length=2, unique=True)),
                ('iso3', models.CharField(max_length=3)),
                ('name', models.CharField(max_length=48)),
                ('continent', models.CharField(max_length=2)),
                ('tld', models.CharField(max_length=12)),
                ('tzlow', models.FloatField()),
                ('tzhigh', models.FloatField()),
            ],
            options={
                'db_table': 'countries',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country_code', models.CharField(blank=True, max_length=2, null=True)),
                ('country_name', models.CharField(blank=True, db_collation='latin1_general_ci', max_length=45, null=True)),
            ],
            options={
                'db_table': 'country',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DachArchive',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField()),
                ('user', models.CharField(max_length=32)),
                ('license_archive_id', models.IntegerField()),
                ('agreement', models.CharField(max_length=128)),
                ('installation', models.CharField(max_length=128)),
                ('customer', models.CharField(max_length=128)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('es_date', models.DateField()),
                ('lictype', models.CharField(max_length=32)),
                ('server_id', models.CharField(blank=True, max_length=128, null=True)),
                ('target_id', models.CharField(blank=True, max_length=128, null=True)),
                ('features', models.TextField()),
            ],
            options={
                'db_table': 'dach_archive',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DownloadActivity',
            fields=[
                ('downloadid', models.IntegerField(db_column='DownloadID', primary_key=True, serialize=False)),
                ('downloadtype', models.CharField(blank=True, db_column='DownloadType', max_length=4, null=True)),
                ('startdatetime', models.DateTimeField(blank=True, db_column='StartDateTime', null=True)),
                ('enddatetime', models.DateTimeField(blank=True, db_column='EndDateTime', null=True)),
                ('durationseconds', models.IntegerField(blank=True, db_column='DurationSeconds', null=True)),
                ('downloadipaddress', models.CharField(blank=True, db_column='DownloadIPAddress', max_length=128, null=True)),
                ('ipaddresscountry', models.CharField(blank=True, db_column='IPAddressCountry', max_length=3, null=True)),
                ('intrawareaccountid', models.CharField(blank=True, db_column='IntrawareAccountID', max_length=15, null=True)),
                ('accountid', models.CharField(blank=True, db_column='AccountID', max_length=100, null=True)),
                ('accountname', models.CharField(blank=True, db_column='AccountName', max_length=100, null=True)),
                ('intrawarememberid', models.IntegerField(blank=True, db_column='IntrawareMemberID', null=True)),
                ('memberid', models.CharField(blank=True, db_column='MemberID', max_length=100, null=True)),
                ('lastname', models.CharField(blank=True, db_column='LastName', max_length=30, null=True)),
                ('firstname', models.CharField(blank=True, db_column='FirstName', max_length=30, null=True)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=100, null=True)),
                ('country', models.CharField(blank=True, db_column='Country', max_length=3, null=True)),
                ('intrawareorderid', models.IntegerField(blank=True, db_column='IntrawareOrderID', null=True)),
                ('orderid', models.CharField(blank=True, db_column='OrderID', max_length=100, null=True)),
                ('orderdate', models.DateField(blank=True, db_column='OrderDate', null=True)),
                ('intrawarecatalogitemid', models.IntegerField(blank=True, db_column='IntrawareCatalogItemID', null=True)),
                ('catalogitemid', models.CharField(blank=True, db_column='CatalogItemID', max_length=40, null=True)),
                ('catalogitemname', models.CharField(blank=True, db_column='CatalogItemName', max_length=255, null=True)),
                ('intrawareproductid', models.IntegerField(blank=True, db_column='IntrawareProductID', null=True)),
                ('productid', models.CharField(blank=True, db_column='ProductID', max_length=40, null=True)),
                ('productname', models.CharField(blank=True, db_column='ProductName', max_length=255, null=True)),
                ('intrawarefileid', models.IntegerField(blank=True, db_column='IntrawareFileID', null=True)),
                ('fileid', models.CharField(blank=True, db_column='FileID', max_length=40, null=True)),
                ('filename', models.CharField(blank=True, db_column='FileName', max_length=255, null=True)),
            ],
            options={
                'db_table': 'download_activity',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ElsArchive',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('username', models.CharField(blank=True, max_length=30, null=True)),
                ('modified', models.DateTimeField()),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('customer', models.CharField(blank=True, max_length=80, null=True)),
                ('agreement', models.CharField(blank=True, max_length=30, null=True)),
                ('installation', models.CharField(blank=True, max_length=30, null=True)),
                ('startdate', models.DateField(blank=True, null=True)),
                ('enddate', models.DateField(blank=True, null=True)),
                ('po', models.CharField(blank=True, max_length=80, null=True)),
                ('serverid', models.CharField(blank=True, max_length=255, null=True)),
                ('methtype', models.CharField(blank=True, max_length=20, null=True)),
                ('lictype', models.CharField(blank=True, max_length=30, null=True)),
                ('letter', models.CharField(blank=True, max_length=30, null=True)),
                ('elsieif', models.TextField(blank=True, null=True)),
                ('body', models.TextField(blank=True, null=True)),
                ('cgi', models.TextField(blank=True, null=True)),
                ('license', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'els_archive',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Emp',
            fields=[
                ('empno', models.IntegerField(primary_key=True, serialize=False)),
                ('fullname', models.CharField(max_length=80)),
                ('lastfi', models.CharField(max_length=60)),
                ('nameph', models.CharField(max_length=80)),
                ('first', models.CharField(max_length=30)),
                ('preferred', models.CharField(max_length=30)),
                ('last', models.CharField(max_length=30)),
                ('minname', models.CharField(max_length=20)),
                ('email', models.CharField(max_length=40)),
                ('phone', models.CharField(max_length=40)),
                ('buno', models.CharField(max_length=8)),
                ('buname', models.CharField(max_length=128)),
                ('deptno', models.CharField(max_length=8)),
                ('deptname', models.CharField(max_length=128)),
                ('location', models.CharField(max_length=80)),
                ('phonesite', models.CharField(max_length=40)),
                ('supno', models.IntegerField()),
                ('supname', models.CharField(max_length=40)),
                ('skypename', models.CharField(max_length=40)),
                ('mobile', models.CharField(blank=True, max_length=40, null=True)),
                ('gositeflag', models.CharField(blank=True, max_length=20, null=True)),
                ('organization', models.CharField(blank=True, max_length=255, null=True)),
                ('fileno', models.CharField(blank=True, max_length=40, null=True)),
                ('locid', models.IntegerField(blank=True, null=True)),
                ('personid', models.IntegerField(blank=True, null=True)),
                ('fullemail', models.CharField(max_length=90)),
                ('userid', models.CharField(blank=True, max_length=90, null=True)),
                ('exempt', models.CharField(blank=True, max_length=8, null=True)),
                ('start', models.CharField(blank=True, max_length=20, null=True)),
                ('category', models.CharField(blank=True, max_length=80, null=True)),
                ('expensebu', models.CharField(blank=True, max_length=20, null=True)),
                ('expnsdept', models.CharField(blank=True, max_length=20, null=True)),
                ('title', models.CharField(blank=True, max_length=80, null=True)),
                ('resourcetype', models.CharField(blank=True, max_length=80, null=True)),
                ('company', models.IntegerField(blank=True, null=True)),
                ('companyname', models.CharField(blank=True, max_length=50, null=True)),
                ('created', models.DateTimeField()),
                ('updated', models.DateTimeField(blank=True, null=True)),
                ('active', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'emp',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EmplicAddons',
            fields=[
                ('userid', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('addon', models.CharField(max_length=32)),
            ],
            options={
                'db_table': 'emplic_addons',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EmplicConfirm',
            fields=[
                ('seq', models.AutoField(primary_key=True, serialize=False)),
                ('mscid', models.CharField(blank=True, max_length=12, null=True)),
                ('empno', models.IntegerField(blank=True, null=True)),
                ('generated', models.DateTimeField()),
                ('ipaddr', models.CharField(blank=True, max_length=32, null=True)),
                ('confirmkey', models.CharField(blank=True, max_length=32, null=True, unique=True)),
                ('confirmed', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'emplic_confirm',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EmplicHits',
            fields=[
                ('seq', models.AutoField(primary_key=True, serialize=False)),
                ('mscid', models.CharField(blank=True, max_length=12, null=True)),
                ('empno', models.IntegerField(blank=True, null=True)),
                ('generated', models.DateTimeField()),
                ('ipaddr', models.CharField(blank=True, max_length=32, null=True)),
                ('archive_id', models.IntegerField(blank=True, null=True)),
                ('license', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'emplic_hits',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EmplicOverride',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('empno', models.IntegerField(unique=True)),
            ],
            options={
                'db_table': 'emplic_override',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EmpLocations',
            fields=[
                ('loccode', models.CharField(blank=True, max_length=80, null=True)),
                ('description', models.CharField(blank=True, max_length=80, null=True)),
                ('contact', models.CharField(blank=True, max_length=80, null=True)),
                ('address1', models.CharField(blank=True, max_length=80, null=True)),
                ('address2', models.CharField(blank=True, max_length=80, null=True)),
                ('address3', models.CharField(blank=True, max_length=80, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('postalcode', models.CharField(blank=True, max_length=25, null=True)),
                ('region1', models.CharField(blank=True, max_length=80, null=True)),
                ('region2', models.CharField(blank=True, max_length=80, null=True)),
                ('region3', models.CharField(blank=True, max_length=80, null=True)),
                ('country', models.CharField(blank=True, max_length=20, null=True)),
                ('phone1', models.CharField(blank=True, max_length=30, null=True)),
                ('phone2', models.CharField(blank=True, max_length=30, null=True)),
                ('phone3', models.CharField(blank=True, max_length=30, null=True)),
                ('shiptosite', models.CharField(blank=True, max_length=80, null=True)),
                ('billtosite', models.CharField(blank=True, max_length=80, null=True)),
                ('officesite', models.CharField(blank=True, max_length=80, null=True)),
                ('internalsite', models.CharField(blank=True, max_length=80, null=True)),
                ('receivingsite', models.CharField(blank=True, max_length=80, null=True)),
                ('addressstyle', models.CharField(blank=True, max_length=20, null=True)),
                ('locid', models.IntegerField(primary_key=True, serialize=False)),
                ('locworldarea', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'emp_locations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Entries',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('system', models.CharField(blank=True, max_length=128, null=True)),
                ('subsystem', models.CharField(blank=True, max_length=128, null=True)),
                ('topic', models.CharField(blank=True, max_length=128, null=True)),
                ('level', models.CharField(blank=True, max_length=64, null=True)),
                ('priority', models.CharField(blank=True, max_length=64, null=True)),
                ('message', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'entries',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlasArchive',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField()),
                ('user', models.CharField(max_length=32)),
                ('actual_user', models.CharField(max_length=32)),
                ('delivery_key', models.CharField(max_length=36, unique=True)),
                ('license', models.TextField()),
            ],
            options={
                'db_table': 'glas_archive',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlasDelivery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('glas_archive_id', models.IntegerField()),
                ('key', models.CharField(max_length=32)),
            ],
            options={
                'db_table': 'glas_delivery',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LgxArchive',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField()),
                ('modified', models.DateTimeField()),
                ('username', models.CharField(max_length=16)),
                ('lgx_server', models.CharField(blank=True, max_length=128, null=True)),
                ('lgx_server_ip', models.CharField(blank=True, max_length=128, null=True)),
                ('customer', models.CharField(blank=True, max_length=80, null=True)),
                ('agreement', models.CharField(blank=True, max_length=30, null=True)),
                ('installation', models.CharField(blank=True, max_length=30, null=True)),
                ('order_number', models.CharField(blank=True, max_length=128, null=True)),
                ('service_id', models.CharField(blank=True, max_length=128, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('es_date', models.DateField(blank=True, null=True)),
                ('origin', models.CharField(blank=True, max_length=16, null=True)),
                ('category', models.CharField(blank=True, max_length=24, null=True)),
                ('product_set', models.CharField(blank=True, max_length=24, null=True)),
                ('license_type', models.CharField(blank=True, max_length=24, null=True)),
                ('server_ids', models.CharField(blank=True, max_length=2048, null=True)),
                ('server_names', models.CharField(blank=True, max_length=2048, null=True)),
                ('host_ids', models.CharField(blank=True, max_length=2048, null=True)),
                ('mail_to', models.CharField(blank=True, max_length=255, null=True)),
                ('mail_cc', models.CharField(blank=True, max_length=255, null=True)),
                ('mail_bcc', models.CharField(blank=True, max_length=255, null=True)),
                ('input_data', models.CharField(max_length=16384)),
                ('letter', models.TextField()),
                ('archive_id', models.IntegerField()),
            ],
            options={
                'db_table': 'lgx_archive',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LgxLetter',
            fields=[
                ('name', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('sequence', models.IntegerField()),
                ('description', models.CharField(max_length=128)),
                ('template', models.CharField(max_length=128)),
                ('permission', models.CharField(max_length=32)),
            ],
            options={
                'db_table': 'lgx_letter',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LgxLot',
            fields=[
                ('lot_id', models.AutoField(primary_key=True, serialize=False)),
                ('lot_timestamp', models.DateTimeField()),
                ('lot_mode', models.CharField(max_length=9)),
                ('lot_user', models.CharField(max_length=32)),
                ('lot_filename', models.CharField(max_length=256)),
                ('lot_input', models.TextField()),
                ('lot_md5', models.CharField(max_length=128)),
            ],
            options={
                'db_table': 'lgx_lot',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LgxLotDetail',
            fields=[
                ('lot_item_id', models.AutoField(primary_key=True, serialize=False)),
                ('lot_detail_timestamp', models.DateTimeField()),
                ('lot_detail_email', models.CharField(max_length=128)),
                ('lot_id', models.IntegerField()),
                ('lot_item_input', models.TextField()),
                ('lot_archive_id', models.IntegerField()),
                ('lot_detail_hostid', models.CharField(max_length=32)),
                ('lot_item_status', models.CharField(max_length=7)),
                ('lot_item_status_msg', models.CharField(max_length=1024)),
                ('lot_detail_letter', models.TextField()),
                ('lot_detail_lethtml', models.TextField()),
                ('lot_detail_campaign', models.CharField(max_length=128)),
            ],
            options={
                'db_table': 'lgx_lot_detail',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LgxLotStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lot_id', models.IntegerField()),
                ('lot_status_signal', models.CharField(max_length=6)),
                ('lot_status_msg', models.CharField(max_length=4096)),
                ('lot_status_count_good', models.IntegerField()),
                ('lot_status_count_bad', models.IntegerField()),
            ],
            options={
                'db_table': 'lgx_lot_status',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LgxSfdc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lgx_id', models.IntegerField(unique=True)),
                ('posted', models.DateTimeField()),
                ('status', models.IntegerField(blank=True, null=True)),
                ('postlog', models.CharField(blank=True, max_length=8192, null=True)),
                ('sfdcdata', models.CharField(blank=True, max_length=20000, null=True)),
            ],
            options={
                'db_table': 'lgx_sfdc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LicenseArchive',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField()),
                ('user', models.CharField(max_length=32)),
                ('actual_user', models.CharField(max_length=128)),
                ('service', models.CharField(max_length=32)),
                ('subservice', models.CharField(blank=True, max_length=64, null=True)),
                ('reference', models.CharField(blank=True, max_length=255, null=True)),
                ('delivery_key', models.CharField(max_length=36, unique=True)),
                ('license', models.TextField()),
            ],
            options={
                'db_table': 'license_archive',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LicensePurpose',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('description', models.CharField(max_length=128)),
                ('details', models.CharField(blank=True, max_length=1024, null=True)),
                ('internal', models.IntegerField()),
                ('active', models.IntegerField()),
                ('duration', models.CharField(blank=True, max_length=64, null=True)),
                ('presets', models.CharField(blank=True, max_length=80, null=True)),
                ('psl', models.IntegerField(blank=True, null=True)),
                ('ordered', models.IntegerField(blank=True, null=True)),
                ('created', models.DateTimeField()),
                ('retired', models.DateTimeField()),
            ],
            options={
                'db_table': 'license_purpose',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LicenseTags',
            fields=[
                ('user', models.CharField(max_length=16, primary_key=True, serialize=False)),
                ('tag', models.CharField(max_length=256)),
            ],
            options={
                'db_table': 'license_tags',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('logtime', models.DateTimeField()),
                ('ident', models.CharField(max_length=16)),
                ('priority', models.IntegerField()),
                ('message', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LogIdSeq',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'log_id_seq',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LpfeatsAllowed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=32)),
                ('product', models.CharField(max_length=32)),
            ],
            options={
                'db_table': 'lpfeats_allowed',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LpfeatsDelivery',
            fields=[
                ('seq', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(blank=True, max_length=32, null=True)),
                ('product', models.CharField(blank=True, max_length=32, null=True)),
                ('created', models.DateTimeField()),
                ('delivery', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'lpfeats_delivery',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LpfeatsEmpname',
            fields=[
                ('username', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('empno', models.IntegerField()),
                ('admin', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'lpfeats_empname',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LpfeatsProducts',
            fields=[
                ('product', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('type', models.CharField(blank=True, max_length=32, null=True)),
            ],
            options={
                'db_table': 'lpfeats_products',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField()),
                ('revised', models.DateTimeField()),
                ('level', models.IntegerField()),
                ('author', models.CharField(max_length=48)),
                ('summary', models.CharField(max_length=80)),
                ('article', models.TextField()),
            ],
            options={
                'db_table': 'news',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PermEntries',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permission', models.CharField(max_length=32, unique=True)),
                ('description', models.CharField(max_length=128)),
            ],
            options={
                'db_table': 'perm_entries',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PermUsers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(max_length=16)),
                ('permission', models.CharField(max_length=32)),
            ],
            options={
                'db_table': 'perm_users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PredatorArchive',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField()),
                ('user', models.CharField(max_length=32)),
                ('license_archive_id', models.IntegerField()),
                ('agreement', models.CharField(blank=True, max_length=128, null=True)),
                ('installation', models.CharField(max_length=128)),
                ('customer', models.CharField(max_length=128)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('es_date', models.DateField()),
                ('lictype', models.CharField(max_length=32)),
                ('server_id', models.CharField(blank=True, max_length=128, null=True)),
                ('target_id', models.CharField(blank=True, max_length=128, null=True)),
                ('features', models.TextField()),
                ('email', models.CharField(max_length=256)),
            ],
            options={
                'db_table': 'predator_archive',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ServerStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stamp', models.DateTimeField()),
                ('server', models.CharField(blank=True, max_length=128, null=True)),
                ('status', models.CharField(blank=True, max_length=256, null=True)),
            ],
            options={
                'db_table': 'server_status',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SimufactArchive',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField()),
                ('expiration', models.DateField()),
                ('hostid', models.CharField(max_length=32)),
                ('sid', models.CharField(max_length=32)),
                ('type', models.CharField(max_length=8)),
                ('sequence', models.IntegerField(unique=True)),
                ('license', models.TextField()),
            ],
            options={
                'db_table': 'simufact_archive',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stamp', models.DateTimeField()),
                ('process', models.CharField(max_length=32)),
                ('mode', models.CharField(max_length=7)),
                ('message', models.TextField()),
            ],
            options={
                'db_table': 'status',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Timezone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zone_id', models.IntegerField()),
                ('abbreviation', models.CharField(max_length=6)),
                ('time_start', models.IntegerField()),
                ('gmt_offset', models.IntegerField()),
                ('dst', models.CharField(max_length=1)),
            ],
            options={
                'db_table': 'timezone',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrialDesc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('template', models.CharField(blank=True, max_length=33, null=True)),
                ('type', models.CharField(blank=True, max_length=32, null=True)),
                ('description', models.CharField(blank=True, max_length=128, null=True)),
            ],
            options={
                'db_table': 'trial_desc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrialTemplates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, max_length=20, null=True)),
                ('template', models.CharField(blank=True, max_length=33, null=True)),
            ],
            options={
                'db_table': 'trial_templates',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrialType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('typename', models.CharField(blank=True, max_length=32, null=True)),
                ('typesort', models.CharField(blank=True, max_length=32, null=True)),
            ],
            options={
                'db_table': 'trial_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrialUsers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, max_length=20, null=True)),
                ('reference', models.CharField(blank=True, max_length=33, null=True)),
            ],
            options={
                'db_table': 'trial_users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UnsupportedFeatures',
            fields=[
                ('feature', models.CharField(max_length=48, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'unsupported_features',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Zone',
            fields=[
                ('zone_id', models.AutoField(primary_key=True, serialize=False)),
                ('country_code', models.CharField(max_length=2)),
                ('zone_name', models.CharField(max_length=35)),
            ],
            options={
                'db_table': 'zone',
                'managed': False,
            },
        ),
    ]
